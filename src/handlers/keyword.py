from . import *


router = Router()


class KeywordsState(StatesGroup):
    for_keyboard_menu = State()

    to_start_change_keyword = State()

    to_set_keyword_name = State()


kwds_help = '''
–°–ª–æ–≤–∞-—Ä—É–±—Ä–∏–∫–∏, –∫–æ—Ç–æ—Ä—ã–µ –æ—Ç–ª–∏—á–Ω–æ —Ä–∞–±–æ—Ç–∞—é—Ç –ø–æ —Å–∞–π—Ç–∞–º(–ø–∏—Å–∞—Ç—å 
—Ç–∞–∫–∂–µ!): –ø–æ–ª–∏—Ç–∏–∫–∞, –±–∏–∑–Ω–µ—Å, —ç–∫–æ–Ω–æ–º–∏–∫–∞, –º–Ω–µ–Ω–∏—è, —Ç–µ—Ö–Ω–æ–ª–æ–≥–∏–∏, 
–º–µ–¥–∏–∞, —Ñ–∏–Ω–∞–Ω—Å—ã, —Å–≤–æ–µ –¥–µ–ª–æ, –≤ –º–∏—Ä–µ, –æ–±—â–µ—Å—Ç–≤–æ, –ø—Ä–æ–∏—Å—à–µ—Å—Ç–≤–∏—è, 
–∞—Ä–º–∏—è, –Ω–∞—É–∫–∞, —Å–ø–æ—Ä—Ç, –∫—É–ª—å—Ç—É—Ä–∞, —Ä–µ–ª–∏–≥–∏—è, —Ç—É—Ä–∏–∑–º, —Å–µ–º—å—è, –∞–≤—Ç–æ, 
—Å—Ç–∏–ª—å, –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã

–¢–∞–∫–∂–µ, —Ä–∞–±–æ—Ç–∞–µ—Ç –∏ –ø–æ–∏—Å–∫ –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º —Å–∞–π—Ç–æ–≤ —á–µ—Ä–µ–∑ –∏—Ö
–≤—Å—Ç—Ä–æ–µ–Ω–Ω—ã–µ –ø–æ–∏—Å–∫–∏, –Ω–∞–ø—Ä–∏–º–µ—Ä, –ø–æ —Å–ª–æ–≤—É –º–æ—Å–∫–≤–∞ –∏–ª–∏ –ü—É—Ç–∏–Ω 
–Ω–µ–∫–æ—Ç–æ—Ä—ã–µ —Å–∞–π—Ç—ã –¥–∞—é—Ç –≤–Ω—è—Ç–Ω—ã–µ –æ—Ç–≤–µ—Ç—ã.
–£ —Å–∞–π—Ç–∞ finam.ru —Ä–∞–±–æ—Ç–∞–µ—Ç —Ç–æ–ª—å–∫–æ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ "–∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—ã", 
—Ç.–∫ –Ω–µ –∏–º–µ–µ—Ç –ø–æ–∏—Å–∫–∞

–¢–µ–ª–µ–≥—Ä–∞–º-–∫–∞–Ω–∞–ª—ã –ø–∞—Ä—Å—è—Ç—Å—è –ø–æ –ø–æ—Å–ª–µ–¥–Ω–µ–º—É –ø–æ—Å—Ç—É —Å –ø—Ä–æ–≤–µ—Ä–∫–æ–π –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞.
–î–æ–ø—É—Å—Ç–∏–º–∞ –æ—à–∏–±–∫–∞ –Ω–∞–ø–∏—Å–∞–Ω–∏—è –∫–∞–∫ —Å –∑–∞–≥–ª–∞–≤–Ω–æ–π, —Ç–∞–∫ –∏ —Å –º–∞–ª–µ–Ω—å–∫–æ–π –±—É–∫–≤—ã.
–ù–∞–ø—Ä–∏–º–µ—Ä, —á—Ç–æ–±—ã –ø–æ–π–º–∞—Ç—å –ø–æ—Å—Ç –ø—Ä–æ –ì–æ—Å—É—Å–ª—É–≥–∏, –º–æ–∂–Ω–æ –ø–æ–ø—Ä–æ–±–æ–≤–∞—Ç—å —É—Å—Ç–∞–Ω–æ–≤–∏—Ç—å
–Ω–µ—Å–∫–æ–ª—å–∫–æ —Å–ª–æ–≤: –ì–æ—Å—É—Å–ª—É–≥–∏, –ì–æ—Å—É—Å–ª—É–≥
'''

@router.message(F.text == '–ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞')
async def keywords(message: types.Message, state: FSMContext):
    await state.clear()

    await state.set_state(KeywordsState.for_keyboard_menu)
    await message.answer(
        text='üîë –î–ª—è –Ω–∞—Å—Ç—Ä–æ–π–∫–∏ –∫–ª—é—á–µ–≤—ã—Ö —Å–ª–æ–≤ —Å–Ω–∞—á–∞–ª–∞ –≤—ã–±–µ—Ä–∏—Ç–µ –ª—é–±–æ–π –≤–∞—à –∫–∞–Ω–∞–ª:',
        reply_markup=my_channels()
    )


@router.callback_query(F.data.startswith('channel:'), KeywordsState.for_keyboard_menu)
async def _get_one_my_channel(call: types.CallbackQuery, state: FSMContext):
    # await call.message.delete()

    channel_id = int(call.data.split(":")[1])
    channel_name = Channel().get_channel_name_by_id(channel_id=int(call.data.split(":")[1]))

    await call.message.edit_text(
        text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–∞–Ω–∞–ª {channel_name}',
        reply_markup=under_channel(channel_id=channel_id)
    )


@router.callback_query(F.data.startswith('words_for'), KeywordsState.for_keyboard_menu)
async def keywords_setting(call: types.CallbackQuery, state: FSMContext):
    # await call.message.delete()

    channel_id = int(call.data.split(":")[1])
    channel_name = Channel().get_channel_name_by_id(channel_id=int(call.data.split(":")[1]))

    await state.update_data(channel_id=call.data.split(":")[1])
    await state.update_data(channel_name=channel_name)

    await call.message.edit_text(
        text=f'''
üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∫–∞–Ω–∞–ª–∞ "{channel_name}" –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
{kwds_help}
–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ /set_keyword''',
        reply_markup=get_my_keyword_under_channel(channel_id=channel_id))


@router.callback_query(F.data.startswith('keyword:'), KeywordsState.for_keyboard_menu)
async def see_keyboard_by_channel(call: types.CallbackQuery, state: FSMContext):
    # await call.message.delete()

    now_keyword_id = int(call.data.split(":")[1])
    # —Ç–∏–ø–æ id —Å—Ç–∞—Ä–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞ - —ç—Ç–æ –∫–æ–ø–∏—è id —Ç–µ–∫—É—â–µ–≥–æ
    await state.update_data(old_keyword_id=now_keyword_id)

    full_data = await state.get_data()
    channel_name = full_data['channel_name']
    keyword_name = Keyword().get_keyword_name_by_id(keyword_id=int(call.data.split(":")[1]))

    await call.message.edit_text(
        text=f'–í—ã –≤—ã–±—Ä–∞–ª–∏ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ "{keyword_name}" –¥–ª—è –∫–∞–Ω–∞–ª–∞ "{channel_name}"',
        reply_markup=get_under_keyboard_kb(keyword_id=now_keyword_id)
    )


#------------------------------------------------------------------------------------------------
# –£–¥–∞–ª–µ–Ω–∏–µ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
@router.callback_query(F.data.startswith('remove_keyword'), KeywordsState.for_keyboard_menu)
async def remove_keyword(call: types.CallbackQuery, state: FSMContext):
    # await call.message.delete()

    full_data = await state.get_data()
    channel_name = full_data['channel_name']
    channel_id = full_data['channel_id']
    keyword_id = call.data.split(":")[1]

    Keyword().remove_keyword_by_channel(channel_id=channel_id, keyword_id=int(keyword_id))
    await call.message.edit_text(
        text=f'''
üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∫–∞–Ω–∞–ª–∞ "{channel_name}" –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
{kwds_help}
–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ /set_keyword''',
        reply_markup=get_my_keyword_under_channel(channel_id=channel_id))



#-------------------------------------------------------------------------------------------------
# –ó–∞–º–µ–Ω–∞ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞. –ò–∑–º–µ–Ω—è–µ—Ç—Å—è –ø–æ id —Å—Ç–∞—Ä–æ–≥–æ —Å–ª–æ–≤–∞
@router.callback_query(F.data.startswith('change_keyword'), KeywordsState.for_keyboard_menu)
async def start_change_keyword(call: types.CallbackQuery, state: FSMContext):
    await call.message.delete()

    await call.message.answer(
        text='–î–ª—è –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞, –≤–≤–µ–¥–∏—Ç–µ –Ω–æ–≤–æ–µ üëá'
    )
    await state.set_state(KeywordsState.to_start_change_keyword)


@router.message(F.text, KeywordsState.to_start_change_keyword)
async def get_new_keyword_name(message: types.Message, state: FSMContext):
    keyword_name=message.text

    full_data = await state.get_data()
    old_keyword_id = full_data['old_keyword_id']
    Keyword().change_keyword_by_channel(channel_id=full_data['channel_id'], old_keyword_id=old_keyword_id, new_keyword=keyword_name)

    await message.answer(
        text=f'‚òë –£—Å–ø–µ—à–Ω–æ –∏–∑–º–µ–Ω–µ–Ω–æ –Ω–∞ {keyword_name}')

    await message.answer(
        text=f'''
üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∫–∞–Ω–∞–ª–∞ "{full_data['channel_name']}" –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
{kwds_help}
–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ /set_keyword''',
        reply_markup=get_my_keyword_under_channel(channel_id=full_data['channel_id']))

    await state.set_state(KeywordsState.for_keyboard_menu)
#-------------------------------------------------------------------------------------------------
# –î–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–µ–≤–æ–≥–æ —Å–ª–æ–≤–∞
@router.message(Command('set_keyword'))
async def set_new_keyword(message: types.Message, state: FSMContext):
    try:
        data = await state.get_data()

        for_channel = data['channel_name']

        await state.set_state(KeywordsState.to_set_keyword_name)
        await message.answer(
            text=f'–í–≤–µ–¥–∏—Ç–µ –≤–∞—à–µ –∫–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ –¥–ª—è –∫–∞–Ω–∞–ª–∞ {for_channel} üëá'
        )
    except KeyError:
        await message.answer(text='üõë –û—à–∏–±–∫–∞: –∫–∞–Ω–∞–ª –¥–ª—è —Å–ª–æ–≤–∞ –Ω–µ –±—ã–ª –æ–ø—Ä–µ–¥–µ–ª–µ–Ω, –ø–æ–ø—Ä–æ–±—É–π—Ç–µ –Ω–∞—á–∞—Ç—å —Å –∫–Ω–æ–ø–∫–∏ –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞')


@router.message(F.text, KeywordsState.to_set_keyword_name)
async def get_new_keyword_name(message: types.Message, state: FSMContext):
    await state.update_data(keyword_name=message.text)

    full_data = await state.get_data()
    # print(f'–£—Å—Ç–∞–Ω–æ–≤–∫–∞ –Ω–æ–≤–æ–≥–æ –∫–ª—é—á–∞: full_data={full_data}')
    Keyword().add_keyword_by_channel(
        channel_id=full_data['channel_id'],
        keyword=full_data['keyword_name']
    )
    await message.answer(
        text='‚úî –ö–ª—é—á–µ–≤–æ–µ —Å–ª–æ–≤–æ —É—Å–ø–µ—à–Ω–æ –¥–æ–±–∞–≤–ª–µ–Ω–æ')

    await message.answer(
        text=f'''
üîë –ö–ª—é—á–µ–≤—ã–µ —Å–ª–æ–≤–∞ –∫–∞–Ω–∞–ª–∞ "{full_data['channel_name']}" –ø—Ä–µ–¥—Å—Ç–∞–≤–ª–µ–Ω—ã –≤ –∫–ª–∞–≤–∏–∞—Ç—É—Ä–µ –ø–æ–¥ —Å–æ–æ–±—â–µ–Ω–∏–µ–º.
{kwds_help}
–î–ª—è –¥–æ–±–∞–≤–ª–µ–Ω–∏—è –Ω–∞–∂–º–∏—Ç–µ /set_keyword''',
        reply_markup=get_my_keyword_under_channel(channel_id=full_data['channel_id']))

    await state.set_state(KeywordsState.for_keyboard_menu)
